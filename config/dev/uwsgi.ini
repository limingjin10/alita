[uwsgi]
#load uWSGI plugins
plugins = python
plugin = python
enable-threads = true
hostname = 127.0.0.1
#bind to the specified UNIX/TCP socket using default protocol
socket = %(hostname):15004
#enable the stats server on the specified address,use by-> uwsgitop hostname:3167
stats = %(hostname):3167
#set PYTHONHOME/virtualenv
#virtualenv  = /home/caokai/.venv/alita
virtualenv = /home/caokai/anaconda3/envs/alita 
#set environment variable
env         = ALITA_CONFIG=config/dev/dev.py
#load .wsgi file
wsgi-file   = wsgi_dev.py
#set default WSGI callable name,the default is “application”
callable = application
#automatically rewrite SCRIPT_NAME and PATH_INFO
manage-script-name = true
#load application under mountpoint
mount = /=inc:app

lazy-apps=true  
master          = true
#enable virtualhosting mode (based on SERVER_NAME variable)
vhost           = true
#spawn the specified number of workers/processes
processes       = 2 
#setuid to the specified user/uid
uid             = www
#setgid to the specified group/gid
gid             = www
#log requests slower than the specified number of milliseconds
log-slow = 100
#reload workers after the specified amount of managed requests
max-requests = 20000
#reload if rss memory is higher than specified megabytes
reload-on-rss = 256
#reload if address space is higher than specified megabytes
reload-on-as = 512
#set harakiri timeout
harakiri = 20
#enable verbose mode for harakiri
harakiri-verbose = true
#set the socket listen queue size
listen = 1024
#enable memory report
memory-report  = true
#serialize accept() usage (if possible)
thunder-lock = true
#set python optimization level
optimize = 2
#daemonize uWSGI and log to this file
#daemonize = /home/caokai/alita/logs/uwsgi-dev.log
#set advanced format for request logging
log-format = %(addr) - %(pid) [%(ltime)] "%(method) %(uri) %(proto)" %(status) %(hsize) %(rsize) "%(referer)" "%(uagent)" %(switches) %(micros)
